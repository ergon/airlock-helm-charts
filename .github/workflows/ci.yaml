name: Lint and Test Charts

on:
  pull_request:
  workflow_dispatch:

jobs:
  check-changes:
    runs-on: ubuntu-latest
    outputs:
      continue: ${{steps.changefile.outputs.continue}}
    steps:
      - name: file changes
        id: changefile
        run: |
          changed_file=$(git diff-tree --no-commit-id --name-only -r ${{ github.event.before }} ${{github.event.after}})
          file_count=$(git diff-tree --no-commit-id --name-only -r ${{ github.event.before }} ${{github.event.after}} | wc -l )
          if [[$changed_file == 'charts/microgateway/README.md' && $file_count == 1]]
          then
            echo ::set-output name=continue::false
          else
            echo ::set-output name=continue::true
          fi
  generate-docs:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          persist-credentials: false
          fetch-depth: 0
      - name: Generate helm-docs
        run: .github/helm-docs-generate.sh
        env:
          BRANCH_NAME: ${{ github.head_ref }}
          TECHNICAL_USER_TOKEN: ${{ secrets.TECHNICAL_USER_TOKEN }}
          TECHNICAL_USER: ${{ secrets.TECHNICAL_USER }}
  unit-test:
    runs-on: ubuntu-latest
    needs:
      - generate-docs
    steps:
      - name: Checkout
        uses: actions/checkout@v1
      - name: install and run helm unit tests
        run: .github/unit-test.sh
  kubeval-chart:
    runs-on: ubuntu-latest
    needs:
      - unit-test
    strategy:
      matrix:
        k8s:
          - v1.19.9
          - v1.20.6
          - v1.21.0
    steps:
      - name: Checkout
        uses: actions/checkout@v1
      - name: Run kubeval
        env:
          KUBERNETES_VERSION: ${{ matrix.k8s }}
        run: .github/kubeval.sh
  install-chart:
    name: install-chart
    runs-on: ubuntu-latest
    needs:
      - kubeval-chart
    strategy:
      matrix:
        k8s:
          - v1.19.7
          - v1.20.2
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up Helm
        uses: azure/setup-helm@v1
        with:
          version: v3.4.0
      - uses: actions/setup-python@v2
        with:
          python-version: 3.7
      - name: Set up chart-testing
        uses: helm/chart-testing-action@v2.0.1
      - name: Run chart-testing (lint)
        run: ct lint --config .github/ct.yaml
      - name: Create kind ${{ matrix.k8s }} cluster
        uses: helm/kind-action@v1.0.0
        with:
          node_image: kindest/node:${{ matrix.k8s }}
      - name: Create Secrets
        run: |
          kubectl cluster-info
          kubectl create secret docker-registry dockersecret --docker-username=${{ secrets.DOCKER_USER }} --docker-password=${{ secrets.DOCKER_USER_TOKEN }}
          kubectl create secret generic microgatewaysecrets --from-literal=license="${{ secrets.WAF_LICENSE }}" --from-literal=passphrase="${{ secrets.WAF_PASSPHRASE }}"
      - name: Run chart-testing (install)
        run: ct install --config .github/ct.yaml
