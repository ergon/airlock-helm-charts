suite: test secrets
release:
  name: my-microgateway
chart:
  version: 1.0.1
tests:
  - it: create secret with given passphrase
    set:
      config.passphrase.value: "passphrase"
    asserts:
      - hasDocuments:
          count: 1
      - isKind:
          of: Secret
      - equal:
          path: metadata.name
          value: my-microgateway-passphrase
      - equal:
          path: data.passphrase
          value: cGFzc3BocmFzZQ==
    template: passphrasesecret.yaml

  - it: do not create passphrase secret if an existing secret is to be used
    set:
      config.passphrase.useExistingSecret: true
      config.passphrase.secretName: passphraseSecret
    assert:
      - hasDocuments:
          count: 0
      - isNull:
          path:  data.passphrase
    template: passphrasesecret.yaml

  - it: create random secret if none is provided
    set:
      config.passphrase.value: null
    asserts:
      - hasDocuments:
          count: 1
      - isKind:
          of: Secret
      - isNotNull:
          path: data.passphrase
    template: passphrasesecret.yaml

  - it: use existing secret in Deployment
    set:
      config.passphrase.useExistingSecret: true
      config.passphrase.secretName: passphrase-secret
    asserts:
      - equal:
          path: spec.template.spec.volumes[1].secret.secretName
          value: passphrase-secret
    template: deployment.yaml

  - it: use created secret in Deployment
    asserts:
      - equal:
          path: spec.template.spec.volumes[1].secret.secretName
          value: my-microgateway-passphrase
    template: deployment.yaml
  
  # - it: fail if mounting existing secret without secretName
  #   set:
  #     config.passphrase.useExistingSecret: true
  #   asserts:
  #     - failedTemplate:
  #         errorMessage: Value 'config.passphrase.secretName' is required to mount external passphrase secret.
  #   template: deployment.yaml  

